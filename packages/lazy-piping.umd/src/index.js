!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((n=n||self).LazyPiping={})}(this,(function(n){"use strict";function t(n){return Array.isArray(n)||"function"==typeof(null==n?void 0:n[Symbol.iterator])}class o{constructor(n,o={}){if(this._callbackList=[],!t(n))throw new TypeError("The given input is not a valid iterable.");this._iter=n}*_calc(){let n=this._iter;for(const t of this._callbackList){const o=t(n),e=[];for(const t of n)e.push(yield*o);n=e.values()}return n}pipe(...n){return this._callbackList=null!=n?n:[],this}get(n){const t=Array.from(this._calc());return"function"==typeof n?n(t):t}}n.LazyPiping=o,n.concat=function(n){return function*(t){for(const n of t)yield n;for(const t of n)yield t}},n.filter=function(n){return function*(t){for(const o of t)n(o)&&(yield o)}},n.find=function(n){return function*(t){for(const o of t)if(n(o))return void(yield o)}},n.first=function(){return function*(n){yield n.next().value}},n.from=function(n,t){return new o(n,t)},n.isAsyncIterable=function(n){return"function"==typeof(null==n?void 0:n[Symbol.asyncIterator])},n.isIterable=t,n.map=function(n){return function*(t){for(const o of t)yield n(o)}},n.range=function*(n=0,t=1/0,o=1){let e=n,i=t;for(;i>0;)yield e,e+=o,i-=o},n.skim=function(n){return function*(t){for(const o of t)n(o),yield o}},n.slice=function(n=0,t=1/0){return function*(o){for(const e of o)if(!(0>n)){if(0>=t)return;yield e}}},n.take=function(n=1/0){return function*(t){for(const o of t){if(0>n)return;yield o}}},n.unique=function(){return function*(n){const t=new Set;for(const o of n)t.has(o)||(t.add(o),yield o);t.clear()}},Object.defineProperty(n,"__esModule",{value:!0})}));
